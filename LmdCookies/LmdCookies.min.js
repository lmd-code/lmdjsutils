/**
 * LmdCookies - a lightweight wrapper for browser cookies
 * @copyright LMD-Code 2022
 * @see https://github.com/lmd-code/lmdjsutils/
 * @version 1.1.1
 * @license CC0-1.0
 */"use strict";class LmdCookies{constructor(a=null,b=null,c=null,d=!1,e="lax"){this.cookiePrefix="string"==typeof a&&""!==a?a+"_":"",this.cookiePath="string"==typeof b&&""!==b?b:null,this.cookieDomain="string"==typeof c&&""!==c?c:null,this.cookieSecure=!("boolean"!=typeof d)&&d,this.cookieSamesite="string"==typeof e&&""!==e?e:"lax",this._isEnabled=null,this.cookiePrefixEnc=""===this.cookiePrefix?"":encodeURIComponent(a)+"_","none"===this.cookieSamesite&&(this.cookieSecure=!0,console.warn(`${this.constructor.name}: where 'SameSite' is set to 'none' (cross-site access allowed), 'secure' must be set to 'true' (access over 'HTTPS' only), or it may be rejected by modern browsers. If the domain serving the cookie does not have HTTPS, then you can not specify 'none' for 'SameSite'.`)),this.data=this.getCookies()}get isEnabled(){if(this._isEnabled===void 0||null===this._isEnabled){if(-1!=document.cookie.indexOf("_lmdcookies_test"))this._isEnabled=!0;else try{if(!navigator.cookieEnabled)throw"NO_COOKIE";if(document.cookie="_lmdcookies_test=LmdCookiesTest;SameSite=Strict",-1==document.cookie.indexOf("_lmdcookies_test"))throw"NO_COOKIE";this._isEnabled=!0}catch(a){this._isEnabled=!1,console.warn(`${this.constructor.name}: Cookies are not available/enabled.`)}}return this._isEnabled}get count(){return void 0===this.data||null===this.data?0:Object.keys(this.data).length}has(a){const b=this.cookiePrefix+a;return b in this.data}get(a){const b=this.cookiePrefix+a;return b in this.data?this.data[b]:void 0}set(a,b,c="session"){try{let d=this.cookiePrefixEnc+encodeURIComponent(a)+"=";d+=encodeURIComponent(JSON.stringify(b)),"session"!==c&&(d+="; expires="+LmdCookies.calcExpiresDate(c)),this.cookiePath&&(d+="; path="+this.cookiePath),this.cookieDomain&&(d+="; domain="+this.cookieDomain),this.cookieSecure&&(d+="; secure"),d+="; samesite="+this.cookieSamesite,document.cookie=d,this.data=this.getCookies()}catch(b){console.error(`${this.constructor.name}: could not create/update '${a}'.\n${b.message}`)}}remove(a){this.set(a,"",new Date(0))}getCookies(){const a=document.cookie.split(/\s*;\s*/).filter(a=>a);let b=Object.create(null);if(Array.isArray(a)&&0<a.length)for(const c of a){if(""!==this.cookiePrefixEnc&&0!==c.indexOf(this.cookiePrefixEnc))continue;const[a,d]=c.split("=").map(a=>decodeURIComponent(a));try{b[a]=JSON.parse(d)}catch(c){console.error(`${this.constructor.name}: could not get value of '${a}'.\n${c.message}`),b[a]=null}}return b}static calcExpiresDate(a){if(a instanceof Date)return a.toUTCString();const b=new Date,c=a.split(/\s+/).filter(a=>a);if(Array.isArray(c)&&0<c.length)for(let a=0;a<c.length;a++){let[d,e,f]=c[a].match(/(\d+)(\w+)/i);switch(f=f.toUpperCase(),e=parseInt(e),f){case"Y":b.setUTCFullYear(b.getUTCFullYear()+e);break;case"M":b.setUTCMonth(b.getUTCMonth()+e);break;case"D":b.setUTCDate(b.getUTCDate()+e);break;case"H":b.setUTCHours(b.getUTCHours()+e);break;case"MI":b.setUTCMinutes(b.getUTCMinutes()+e);break;case"S":b.setUTCSeconds(b.getUTCSeconds()+e);break;case"W":b.setUTCDate(b.getUTCDate()+7*e);break;default:}}else b.setUTCFullYear(b.getUTCFullYear()+1);return b.toUTCString()}}